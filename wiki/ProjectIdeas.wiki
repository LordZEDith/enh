#summary Ideas that haven't even gotten to the "mkdir" stage

= Project ideas =

These are various project ideas I've had but haven't done much/any work on.

== How (Software) Stuff Works ==

A tour (with minimalist implementations) of the basic bits of software:
  * ARM emulator (to give an overview of how a nice processor works).
  * ARM assembler/disassembler.
  * BASIC interpreter (or compiler, or both?).
  * higher-level VM?
  * a Unix shell?
  * anything else interesting enough? (should be non-trivial yet practical.)
  * what implementation language? C++ or Java?

== p9term ==

A reimplementation of Plan 9's 8.5 windows, in Java using PTextArea, looking like it belongs in 2008 rather than 1988.
  * commit prototype i have; it's useless but good-looking (should go far!).
  * how best to deal with tab completion?
  * command-line history?
  * color's probably quite easy; some visual distinction for stderr?
  * use control-c and so on for editing; esc for "interrupt".
  * getting Bash to behave?
  * any problems surrounding job control?
  * Plan 9-like "noscroll mode" where the default assumption is that you want to read command output, not watch it fly past.

== v8script ==

Use [http://code.google.com/p/v8 v8] and add just enough library support to use JavaScript as a Unix command-line scripting language like Ruby.
  * POSIX stuff.
  * convenient file i/o.
  * convenient subprocess handling.
  * anything else? why hasn't JavaScript already been co-opted like this?

Obvious problems with this being that (a) I don't know much JavaScript and (b) don't much like what I do know.

== v8jam ==

Any benefit to using the [http://code.google.com/p/v8 v8] GC in jam? How about the JIT? Jam starts up very fast, and is fast as interpreters go, but it's seriously slow compared to HotSpot/GCJ generated code.

== Simpler "deskbar" ==

Ever since Google started with "onebox" (http://www.google.com/enterprise/gsa/onebox.html) and Apple's Spotlight added calculator functionality, I've wanted something similar for the Linux desktop. There are several contenders, but they're typical Linux apps, favoring power over simplicity. Deskbar (http://www.gnome.org/projects/deskbar-applet/) seems like the least worst, but it's got a more complicated UI than I'd like, and requires extensions be written in Python.
  * As simple as onebox or Spotlight.
    * 123lbs, 5'4", 78F => 56kg, 1.62m, 26C (i.e. unit conversion, taking what people actually write, assuming the obvious target unit, and retaining the likely precision)
    * 2+3*4, sin(90) => 14, 1.0 (i.e. basic calculator)
    * "15mins check oven", "21:30 take pill" => set timers (for stuff not worth adding to a calendar).
  * But maybe take into account that I'm a power user, and let me specify a verb?
    * "a gears of war", "i lord of war", "w gears of war", "gears of war" => amazon, imdb, wikipedia, and google searches.
    * "m 2 read", "j String" => man -s 2 read, latest javadoc for String
    * dictionary/thesaurus? (plan 9 ones are good)
    * leo.org translation? (what would be a convenient interface?)
  * Some way to let people add their own stuff, without dictating an implementation language.
  * I'd rather write the core in Java than anything else; use gconf-editor and /apps/metacity/keybinding_commands to get a global keyboard shortcut?

== code.google.com wiki markup translators ==

I've already got a Talc script to convert man pages to code.google.com wiki markup, but how about:
  * Converting to/from LaTeX (for printing)?
  * Converting to/from HTML (so this same markup can be used independently of code.google.com)?